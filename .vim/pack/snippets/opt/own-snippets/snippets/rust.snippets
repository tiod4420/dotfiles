snippet main
	pub fn main() {
	    ${0}
	}
snippet fn
	fn ${1:function_name}(${2}) ${3}{
	    ${0}
	}
snippet struct
	struct ${1:Struct} {
	    ${2}
	}
snippet enum
	enum ${1:Enum} {
	    ${0}
	}
snippet new
	fn new(${1}) -> ${2:Self} {
	    ${2} {
	        ${0}
	    }
	}
snippet impl
	impl ${1} {
	    ${0}
	}
snippet mod
	mod ${1:mod} {
	    ${0:$VISUAL}
	}
snippet trait
	trait ${1:Trait} {
	    ${0:$VISUAL}
	}
snippet for
	for ${1:i} in ${2} {
	    ${0}
	}
snippet foreach
	for ${1:(i, &item)} in ${2:iter}.enumerate() {
	    ${0}
	}
snippet iflet
	if let Some(${1}) = ${2} {
	    ${0:$VISUAL}
	}
snippet todo
	// TODO: ${0:$VISUAL}
snippet pr
	println!("${1}"${2});${0}
snippet dump
	println!("{:#?}", ${1:$VISUAL});
snippet array
	let ${1:array} = vec![${2:0u8}; ${3:len}];
snippet vec
	let ${1:vec}: Vec<${2:u8}> = Vec::new();
snippet box
	Box::new(${0:$VISUAL})
snippet rc
	Rc::new(${0:$VISUAL})
snippet #[
	#[derive(${1:Debug})]
