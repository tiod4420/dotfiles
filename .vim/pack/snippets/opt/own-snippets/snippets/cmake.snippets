snippet cmake
	cmake_minimum_required(VERSION 3.13)
	project(${1:Project} C)

	option(BUILD_TESTING "Build the testing tree." OFF)
	set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
	set(THREADS_PREFER_PTHREAD_FLAG ON)

	find_package(SGX REQUIRED)
	find_package(Threads REQUIRED)
	include(CTest)

	add_compile_options(
		-Wall -Wextra -W -Wwrite-strings -Wpointer-arith -Wimplicit-fallthrough
		$<$<CONFIG:ASan>:-fsanitize=address$<SEMICOLON>-fsanitize=undefined>
		$<$<CONFIG:Coverage>:--coverage>
		)

	add_link_options(
		$<$<CONFIG:ASan>:-fsanitize=address$<SEMICOLON>-fsanitize=undefined>
		$<$<CONFIG:Coverage>:--coverage>
		)

	set(${2:PROJECT}_INCLUDE_DIRECTORY \${CMAKE_CURRENT_SOURCE_DIR}/include)

	add_subdirectory(externals)
	add_subdirectory(src)
	add_subdirectory(tests)
snippet inc
	include_directories(${${1:include}})

snippet find
	find_package(${1:library} ${2:REQUIRED})

snippet file
	file(GLOB ${1:SOURCES} *.${2:cpp})

snippet sub
	add_subdirectory(${1:src})

snippet lib
	add_library(${1:lib} ${2:$1_SOURCES})

snippet tar
	target_link_libraries(${1:main} ${2:PUBLIC} ${3:lib})

snippet add
	add_executable(${1:main} ${2:\${SOURCES}})

snippet set
	set(${1:var} ${2:value})

snippet dep
	add_dependencies(${1:target} ${2:dep})

snippet git
	include(ExternalProject)

	ExternalProject_Add(${1:googletest}
		GIT_REPOSITORY    ${2:https://github.com/google/googletest.git}
		GIT_TAG           ${3:master}
		SOURCE_DIR        "${4:${CMAKE_BINARY_DIR}/googletest-src}"
		BINARY_DIR        "${5:${CMAKE_BINARY_DIR}/googletest-build}"
		CONFIGURE_COMMAND ""
		BUILD_COMMAND     ""
		INSTALL_COMMAND   ""
		TEST_COMMAND      ""
	)

snippet test
	add_test(${1:ATestName} ${2:testCommand})
