## Registers
snippet a
	eax

snippet b
	ebx

snippet c
	ecx

snippet d
	edx

snippet s
	esi

snippet di
	edi

snippet bp
	ebp

snippet sp
	esp
## Common instructions
snippet m
	mov	${1}, ${2}

snippet pu
	push	${1}

snippet po
	pop	${1}

snippet int
	int	${1:0x80}
## Segments
snippet data
	section .data
		${0}

snippet text
	section .text
		global _start

	_start:
		${0}
## Misc
snippet str
	${1:str}: db ${0:${VISUAL}}
	${1}_len: equ \$ - ${1}
	${0}

snippet inc
	.include "${0:${VISUAL}}"
## Function prologue/epiloge
snippet su
	push	ebp
	mov	ebp, esp

snippet fi
	leave
	ret
## Linux usual syscalls
snippet open
	mov	eax, 5
	mov	ebx, ${1}
	mov	ecx, ${2}
	mov	edx, ${3}
	int	0x80
	${0}

snippet read
	mov	eax, 3
	mov	ebx, ${1}
	mov	ecx, ${2}
	mov	edx, ${3}
	int	0x80
	${0}

snippet write
	mov	eax, 4
	mov	ebx, ${1}
	mov	ecx, ${2}
	mov	edx, ${3}
	int	0x80
	${0}

snippet close
	mov	eax, 1
	mov,	ebx, ${1:0}
	int	0x80
	${0}

snippet pr
	mov	eax, 4
	mov	ebx, 1
	mov	ecx, ${1}
	mov	edx, ${2}
	int	0x80
	${0}

snippet exit
	mov	eax, 1
	mov	ebx, ${1:0}
	int	0x80
	${0}
