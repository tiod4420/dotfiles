# Binding settings

# Prefix bindings
unbind -T prefix -a
set -g prefix C-b

# Prefix key
bind -r C-b     send-prefix
# Lowercase letter keys
bind c          new-window -a -c "#{pane_current_path}"
bind d          detach-client
bind g          select-pane -t '{top-left}'
bind h          select-pane -L
bind j          select-pane -D
bind k          select-pane -U
bind l          select-pane -R
bind m          select-pane -m
bind o          swap-pane
bind p          paste-buffer -p
bind q          display-panes
bind r          command-prompt "rename-window -- '%%'"
bind s          split-window -v -c "#{pane_current_path}"
bind t          clock-mode
bind v          split-window -h -c "#{pane_current_path}"
bind w          confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind x          set-option -g status
bind y          copy-mode
# Uppercase letter keys
bind G          select-pane -t '{bottom-right}'
bind M          select-pane -M
bind O          swap-window
bind R          command-prompt "rename-session -- '%%'"
bind W          confirm-before -p "kill-window #W? (y/n)" kill-window
# Number row keys
bind 1          select-window -t :=1
bind 2          select-window -t :=2
bind 3          select-window -t :=3
bind 4          select-window -t :=4
bind 5          select-window -t :=5
bind 6          select-window -t :=6
bind 7          select-window -t :=7
bind 8          select-window -t :=8
bind 9          select-window -t :=9
bind 0          select-window -t :=10
# Number row special character keys
bind '!'        break-pane
bind @          join-pane -h
bind '#'        choose-tree -Zw
bind '$'        last-window
bind %          last-window
bind ^          select-window -t :=1
bind &          command-prompt -p "Session to merge with: " "run-shell \"tmux list-windows -t %% -F '##{session_name}:##{window_index}' | xargs -I{} -n1 tmux move-window -s {}\""
bind '('        swap-window -t -1
bind ')'        swap-window -t +1
bind _          resize-pane -Z
bind =          select-layout -E
bind |          select-layout tiled
bind '`'        next-layout
# Right side keys
bind [          previous-window
bind ]          next-window
bind :          command-prompt
bind '"'        choose-buffer -Z
bind ','        select-window -t '{marked}' \; select-pane -t '{marked}'
bind .          last-pane
bind <          swap-pane -U
bind >          swap-pane -D
bind /          list-keys -T copy-mode-vi
bind ?          list-keys -T prefix
# Arrow keys
bind -r Up      resize-pane -U 5
bind -r Down    resize-pane -D 5
bind -r Left    resize-pane -L 5
bind -r Right   resize-pane -R 5
bind -r S-Up    resize-pane -U
bind -r S-Down  resize-pane -D
bind -r S-Left  resize-pane -L
bind -r S-Right resize-pane -R

# Vi copy mode bindings
unbind -T copy-mode-vi M-x
unbind -T copy-mode-vi MouseDragEnd1Pane

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi x send-keys -X set-mark
bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi X send-keys -X jump-to-mark
bind -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental '%%%'"
bind -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental '%%%'"

# Mouse scrolling in alternate pane, or for git (which has -FXR
bind -T root WheelUpPane   if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" 'send-keys -M' "if -F \"#{||:#{alternate_on},#{==:#{pane_current_command},git}}\" 'send-keys Up' 'copy-mode -e'"
bind -T root WheelDownPane if -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" 'send-keys -M' "if -F \"#{||:#{alternate_on},#{==:#{pane_current_command},git}}\" 'send-keys Down' 'send-keys -M'"
